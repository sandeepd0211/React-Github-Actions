name: CI
on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install Dependencies
        run: npm install

      - name: Lint Check
        run: npm run lint

  version-and-deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Get the current version
        id: curr_version
        run: echo "::set-output name=version::$(node -pe "require('./package.json').version")"

      - name: Install Dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Create or update version folder
        run: |
          mkdir -p docs
          cp -r dist/* docs
          mkdir -p other-versions/v${{ steps.curr_version.outputs.version }}
          cp -r dist/* other-versions/v${{ steps.curr_version.outputs.version }}

      - name: Check if gh-pages branch exists
        run: |
          git branch -a | grep 'remotes/origin/gh-pages$' && export GH_PAGES_EXISTS=true || export GH_PAGES_EXISTS=false

      - name: Create or switch to gh-pages branch
        run: |
          if [ "$GH_PAGES_EXISTS" = true ]; then
            git checkout gh-pages
            git pull origin gh-pages
          else
            git checkout -b gh-pages
          fi

      - name: Commit changes to gh-pages
        run: |
          git add .
          git commit -m "Deploy version ${{ steps.curr_version.outputs.version }}"
          git push origin -f gh-pages
